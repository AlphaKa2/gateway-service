#서버 포트
server:
  port: 8080


spring:
  config:
    import: file:.env[.properties]
  application:
    name: gateway-service

  #클라우드
  cloud:
    gateway:
      routes:

        - id: user-service-with-authentication
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/follow/{targetUserId}, /user-service/unfollow/{targetUserId}
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<remaining>.*), /${remaining}
            - name: JwtAuthenticationFilter
              args:
                loginPageRedirectionUrl: "${LOGIN_URL}"

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RewritePath=/user-service/(?<remaining>.*), /${remaining}

        - id: auth-service-with-authentication
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/logout
          filters:
            - RewritePath=/auth-service/(?<remaining>.*), /${remaining}
            - name: JwtAuthenticationFilter
              args:
                loginPageRedirectionUrl: "${LOGIN_URL}"

        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/**
          filters:
            - RewritePath=/auth-service/(?<remaining>.*), /${remaining}

        - id: blog-service
          uri: lb://BLOG-SERVICE
          predicates:
            - Path=/blog-service/api/posts
          filters:
            - RewritePath=/blog-service/(?<remaining>.*), /${remaining}
            - name: JwtAuthenticationFilter
              args:
                loginPageRedirectionUrl: "${LOGIN_URL}"



#유레카
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: "${EUREKA_URL}"


#JWT 토큰
jwt:
  secretKey: ${JWT_SECRET_KEY}
